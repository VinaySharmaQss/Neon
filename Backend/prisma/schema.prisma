// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}
model User {
  id        Int      @id @default(autoincrement())
  name      String
  email     String   @unique
  password  String
  Image       String?
  phoneNumber  String   @unique
  DOB         DateTime
  refreshToken String?
  accessToken String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Place {
  id                Int      @id @default(autoincrement())
  title             String   // e.g. "Round of Golf"
  mainImage         String   // e.g. cardImg3_4
  weatherLogo       String?   // e.g. weatherLogo // uda do aur hardcode kr do
  temperature       String   // e.g. "18"
  rating            Float   // e.g. "★★★★★"   // e.g. "4.5" we can drive the rating stars by this in the frontend 
  description       String
  eventTime        DateTime
  location          String
  eventType         String   // e.g. "Golf"
  footerLogo        String
  footerDescription String
  reviews           Review[] // One-to-many relationship with Review
  // You may also add an events field here as a relation or JSON field if needed
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Review {
  id         Int      @id @default(autoincrement())
  userImage  String?  // URL or reference to user's image (optional)
  userName   String   // e.g. "Anastasia"
  reviewDate DateTime // Store the review date (convert "Nov 2022" to a Date)
  reviewText String
  rating     Float    // e.g. 4.8
  place      Place    @relation(fields: [placeId], references: [id])
  placeId    Int
}

model Cusines{
  id        Int      @id @default(autoincrement())
  logo      String
  title     String
  date      DateTime
  description String
  accepted  Boolean @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

